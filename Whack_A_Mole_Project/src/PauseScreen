/**
 * This is our pause screen, the user may resume or return to the menu
 */
//import necessary packages
import java.awt.*;
import java.awt.event.*;

import javax.swing.*;

@SuppressWarnings("serial")
public class PauseScreen extends ScreenFrame implements ActionListener{
	private JButton jbtResume, jbtEndGame;
	private PaintPanel canvas = new PaintPanel(); //all components are put on a PaintPanel which holds the background image (bg)
	private JLabel label, timeLeft, score; //text label
	private final Color PAUSE_COLOR_FG = Color.blue, PAUSE_COLOR_BG = Color.cyan; //constant colors of button foreground and background respectively
	private final Font PAUSE_FONT = new Font("Comic Sans MS", Font.PLAIN, 25); //constant font of buttons
	public static int points; 
	
	//Constructor for PauseScreen:
	PauseScreen(){
		super(); //calls ScreenFrame constructor creating a new ScreenFrame
		
		//set layout of canvas so we can add buttons manually
		canvas.setLayout(null);
		this.add(canvas); //add canvas to PauseScreen
		
		
		//label showing time left
		timeLeft = addCustomLabel("60", Color.black, new Font("MV Boli", Font.BOLD, 50));
		//Sets bounds of the label
		timeLeft.setBounds(400, -350, this.getWidth() - 1, this.getHeight() - 1 );
		canvas.add(timeLeft); //add label to canvas
		
		//label showing score
		score = addCustomLabel("Score: " + points, Color.black, new Font("MV Boli", Font.BOLD, 50));
		//Sets bounds of the label
		score.setBounds(725, -350, this.getWidth() - 1, this.getHeight() - 1 );
		canvas.add(score); //add label to canvas
		

		label = addCustomLabel("Paused", Color.black, new Font("MV Boli", Font.BOLD, 50));
		//Sets bounds of the label
		label.setBounds(375, -200, this.getWidth() - 1, this.getHeight() - 1 );
		canvas.add(label); //add label to canvas
		
		
		
		
		//Add custom button to resume mode
		jbtResume = addCustomButton("Resume", 50, 650, 200, 80, PAUSE_COLOR_FG, PAUSE_COLOR_BG, PAUSE_FONT);
		jbtResume.addActionListener(this); //register action listener
		canvas.add(jbtResume); //add button to canvas
		
		//Add custom button to end the game
		jbtEndGame = addCustomButton("End Game", 750, 650, 200, 80, PAUSE_COLOR_FG, PAUSE_COLOR_BG, PAUSE_FONT);
		jbtEndGame.addActionListener(this); //register action listener
		canvas.add(jbtEndGame); //add button to canvas
		
	}//end of PauseScreen constructor

	/**
	 * This method is implemented from the ActionListener interface. Each action performed leads to a different scenario.
	 */
	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource() == jbtResume) {
			if (DifficultyScreen.diff == 1) {
				new EasyPlayScreen();
			}
			else if (DifficultyScreen.diff == 2) {
				new MediumPlayScreen();
			}
			else if (DifficultyScreen.diff == 3){
				new HardPlayScreen();
			}
			this.dispose();//get rid of current window
		}

		else if(e.getSource() == jbtEndGame) {
			new EndGameScreen();
			this.dispose();
		}

	}//end of actionPerformed method
	
	/*
	 * This class is a canvas that draws the background image. All components are added to this Panel, then the
	 * PaintPanel is added to the JFrame.
	 */
	class PaintPanel extends JPanel{
		protected void paintComponent(Graphics g){
			//Prints the canvas that holds the buttons and label
			super.paintComponent(g);
			
		}//end of paintComponent method
	}

}
