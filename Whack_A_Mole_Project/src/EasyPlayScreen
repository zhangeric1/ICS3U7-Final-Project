/**
 * This is our play screen for the easy difficulty, the user can pause and return to menu using the pause button
 */
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

@SuppressWarnings("serial")
public class EasyPlayScreen extends ScreenFrame implements ActionListener{
	public static int points = 0, timeLeft = 60;
	private ImageIcon bg;
	private JLabel headingLabel;
	private JPanel headingPanel;
	private JPanel grid;
	private final Color EASYPLAY_COLOR_FG = Color.blue, EASYPLAY_COLOR_BG = Color.cyan; //constant colors of difficulty button foreground and background respectively
	private final Font EASYPLAY_FONT = new Font("Comic Sans MS", Font.PLAIN, 25); //constant font of difficulty buttons
	Mole[] moles = new Mole[9];
	int time = 60;
	JButton jbtPause;

	public EasyPlayScreen() {
		bg = new ImageIcon("images/bgPlay.jpg");

		headingLabel = addCustomLabel("     Easy: Score: " + points + "     Time left: " + timeLeft + " seconds", Color.cyan, new Font("Comic Sans MS", Font.BOLD, 35));
		headingPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
		headingPanel.setBackground(BG_COLOR);
		jbtPause = addCustomButton("||", 10, 10, 75, 75, EASYPLAY_COLOR_FG, EASYPLAY_COLOR_BG, EASYPLAY_FONT);
		jbtPause.addActionListener(this); //register action listener
		headingPanel.add(jbtPause);
		headingPanel.add(headingLabel);
		this.add(headingPanel, BorderLayout.NORTH);
		
		grid = new PaintPanel();
		grid.setLayout(null);
		for(int i = 0; i < moles.length; i++) {
			moles[i] = new Mole();
			moles[i].addActionListener(this);
			grid.add(moles[i]);
		}
		moles[0].setBounds(150, 200, 100, 90);
		moles[1].setBounds(450, 200, 100, 90);
		moles[2].setBounds(750, 200, 100, 90);
		moles[3].setBounds(150, 350, 100, 90);
		moles[4].setBounds(450, 350, 100, 90);
		moles[5].setBounds(750, 350, 100, 90);
		moles[6].setBounds(150, 500, 100, 90);
		moles[7].setBounds(450, 500, 100, 90);
		moles[8].setBounds(750, 500, 100, 90);
		
		this.add(grid, BorderLayout.CENTER);
        
		//pre-set some moles
        moles[4].setUp();
        moles[7].setUp();
        moles[2].setUp();

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource() == jbtPause) {
			new PauseScreen();
		}
		else {
			for(int i = 0; i < 9; i++) {
				if(e.getSource() == moles[i] && moles[i].isUp) {
					points++;
					int hole;
					do {
						hole = (int)(Math.random() * 9);
					}while(moles[hole].isUp); //keep generating random holes if the mole on that hole is already up (no duplicates)
					moles[hole].setUp();
					moles[i].setDown();
					headingLabel.setText("     EASY: Score: " + points + "     Time left: " + timeLeft + " seconds");
					break;
				}
			}
		}
	}

	/*
	 * This class is a canvas that draws the background image. All components are added to this Panel, then the
	 * PaintPanel is added to the JFrame.
	 */
	class PaintPanel extends JPanel{
		protected void paintComponent(Graphics g){
			super.paintComponent(g); //override the paintComponent method
			//draw the background image
			g.drawImage(bg.getImage(),0,0,this.getWidth(),this.getHeight(),null);
		}//end of paintComponent method
	}
}
